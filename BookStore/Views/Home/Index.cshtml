@*@{
        dynamic data = ViewBag.Data;//for viewBag here we have mention the dynamic data type for complex viewBag code like using viewBag in BookModel data type
        var Bookinfo = ViewData["Book"] as BookModel;//for viewData here we have cast the data and datatype for complex viewData code like using viewData in BookModel data type

    }*@
@{
    //var look = ViewData["book"] as BookModel;
    ViewData["HeadTitle"] = "Home";
}
@inject BookStore.Repository.IBookRepository _bookRepository


<section class=" jumbotron text-center">
    <div class="container">
        <h1>WELCOME TO BOOKSTORE</h1>
        <p>

            @*  @data.Id <br />
                @data.Name <br />
                Id=@ViewBag.Type.Id <br />
                Name = @ViewBag.Type.Author<br />


                Id=@Bookinfo.Id <br />
                Name= @Bookinfo.Author<br />
                    @ViewData["Title"] <br />
                    Id = @look.Id <br />
                    Name = @look.Author <br />*@

            This is a book apllication here you get all kind of books.
            whatever you want can order through this website
        </p>
        <p>
            <a href="#" class=" btn btn-primary">Search books</a>
        </p>
    </div>
</section>


<div class="container">
    <h3 class="h3">Top Books</h3>
    @*<big>Top Books</big>*@                                                                                               @*here (both lines) we are overriding the existing html(big tag) using bigtaghelper.cs class.*@
    @*<p big>Top Books using Attribute</p>*@

    @await Component.InvokeAsync("TopBooks", new { count = 3})                                                             @*these two lines(two ways of using components on view) are from view components(default.cshtml and Topbookviewcomponent file) rendering data or (data from db) using view components.latest included parameter(we can pass n parameters)*@
    @*<vc:top-books count="3"></vc:top-books>*@

    
</div>


@*@section script1{
    <script>
        $(document).ready(function () {
            //alert("document is ready");
        })
    </script>
}*@

